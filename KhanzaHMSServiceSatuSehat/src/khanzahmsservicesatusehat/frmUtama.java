/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package khanzahmsservicesatusehat;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import fungsi.ApiSatuSehat;
import fungsi.SatuSehatCekNIK;
import fungsi.koneksiDB;
import fungsi.sekuel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.Timer;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;

/**
 *
 * @author windiartonugroho
 */
public class frmUtama extends javax.swing.JFrame {
    private  Connection koneksi=koneksiDB.condb();
    private  sekuel Sequel=new sekuel();
    private  String json="",link="",nol_jam = "",nol_menit = "",nol_detik = "",jam="",menit="",detik="",iddokter="",idpasien="";
    private  ApiSatuSehat api=new ApiSatuSehat();
    private  HttpHeaders headers;
    private  HttpEntity requestEntity;
    private  ObjectMapper mapper= new ObjectMapper();
    private  JsonNode root;
    private  JsonNode response;
    private  PreparedStatement ps,ps2;
    private  ResultSet rs,rs2;
    private  SimpleDateFormat tanggalFormat = new SimpleDateFormat("yyyy-MM-dd");
    private  Date date = new Date();  
    private SatuSehatCekNIK cekViaSatuSehat=new SatuSehatCekNIK();  

    /**
     * Creates new form frmUtama
     */
    public frmUtama() {
        initComponents();
        try {
            link=koneksiDB.URLFHIRSATUSEHAT();
        } catch (Exception e) {
            System.out.println("Notif : "+e);
        }
        
        this.setSize(490,340);
        
        date = new Date();  
        Tanggal1.setText(tanggalFormat.format(date)); 
        Tanggal2.setText(tanggalFormat.format(date)); 
        
        jam();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TeksArea = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Tanggal1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Tanggal2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIMKES Khanza Service Satu Sehat");

        TeksArea.setColumns(20);
        TeksArea.setRows(5);
        jScrollPane1.setViewportView(TeksArea);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Tanggal :");
        jLabel1.setPreferredSize(new java.awt.Dimension(70, 23));
        jPanel1.add(jLabel1);

        Tanggal1.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel1.add(Tanggal1);

        jLabel3.setText("s.d.");
        jLabel3.setPreferredSize(new java.awt.Dimension(28, 23));
        jPanel1.add(jLabel3);

        Tanggal2.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel1.add(Tanggal2);

        jLabel2.setPreferredSize(new java.awt.Dimension(30, 23));
        jPanel1.add(jLabel2);

        jButton1.setText("Keluar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmUtama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Tanggal1;
    private javax.swing.JTextField Tanggal2;
    private javax.swing.JTextArea TeksArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    private void jam(){
        ActionListener taskPerformer = new ActionListener(){
            private int nilai_jam;
            private int nilai_menit;
            private int nilai_detik;
            public void actionPerformed(ActionEvent e) {
                nol_jam = "";
                nol_menit = "";
                nol_detik = "";
                Date now = Calendar.getInstance().getTime();
                // Mengambil nilaj JAM, MENIT, dan DETIK Sekarang
                nilai_jam = now.getHours();
                nilai_menit = now.getMinutes();
                nilai_detik = now.getSeconds();
                // Jika nilai JAM lebih kecil dari 10 (hanya 1 digit)
                if (nilai_jam <= 9) {
                    // Tambahkan "0" didepannya
                    nol_jam = "0";
                }
                // Jika nilai MENIT lebih kecil dari 10 (hanya 1 digit)
                if (nilai_menit <= 9) {
                    // Tambahkan "0" didepannya
                    nol_menit = "0";
                }
                // Jika nilai DETIK lebih kecil dari 10 (hanya 1 digit)
                if (nilai_detik <= 9) {
                    // Tambahkan "0" didepannya
                    nol_detik = "0";
                }
                // Membuat String JAM, MENIT, DETIK
                jam = nol_jam + Integer.toString(nilai_jam);
                menit = nol_menit + Integer.toString(nilai_menit);
                detik = nol_detik + Integer.toString(nilai_detik);
                if(jam.equals("01")&&menit.equals("01")&&detik.equals("01")){
                    TeksArea.setText("");
                    date = new Date();  
                    Tanggal1.setText(tanggalFormat.format(date)); 
                    Tanggal2.setText(tanggalFormat.format(date)); 
                }
                
                if(detik.equals("01")&&menit.equals("01")){
                    if((nilai_jam%6)==0){
                        //kirim encounter
                        try{
                            ps=koneksi.prepareStatement(
                                   "select reg_periksa.tgl_registrasi,reg_periksa.jam_reg,reg_periksa.no_rawat,pasien.nm_pasien,pasien.no_ktp,"+
                                   "pegawai.nama,pegawai.no_ktp as ktpdokter,poliklinik.nm_poli,satu_sehat_mapping_lokasi_ralan.id_lokasi_satusehat,"+
                                   "reg_periksa.status_lanjut,DATE_FORMAT(tagihan_sadewa.tgl_bayar,'%Y-%m-%dT%H:%i:%s+07:00') as pulang,ifnull(satu_sehat_encounter.id_encounter,'') as id_encounter "+
                                   "from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis inner join pegawai on pegawai.nik=reg_periksa.kd_dokter "+
                                   "inner join poliklinik on reg_periksa.kd_poli=poliklinik.kd_poli inner join satu_sehat_mapping_lokasi_ralan on satu_sehat_mapping_lokasi_ralan.kd_poli=poliklinik.kd_poli "+
                                   "inner join tagihan_sadewa on tagihan_sadewa.no_nota=reg_periksa.no_rawat left join satu_sehat_encounter on satu_sehat_encounter.no_rawat=reg_periksa.no_rawat "+
                                   "where reg_periksa.tgl_registrasi between ? and ? order by reg_periksa.tgl_registrasi,reg_periksa.jam_reg");
                            try {
                                ps.setString(1,Tanggal1.getText());
                                ps.setString(2,Tanggal2.getText());
                                rs=ps.executeQuery();
                                while(rs.next()){
                                    if((!rs.getString("no_ktp").equals(""))&&(!rs.getString("ktpdokter").equals(""))&&rs.getString("id_encounter").equals("")){
                                        try {
                                            iddokter=cekViaSatuSehat.tampilIDParktisi(rs.getString("ktpdokter"));
                                            idpasien=cekViaSatuSehat.tampilIDPasien(rs.getString("no_ktp"));
                                            try{
                                                headers = new HttpHeaders();
                                                headers.setContentType(MediaType.APPLICATION_JSON);
                                                headers.add("Authorization", "Bearer "+api.TokenSatuSehat());
                                                json = "{" +
                                                            "\"resourceType\": \"Encounter\"," +
                                                            "\"status\": \"finished\"," +
                                                            "\"class\": {" +
                                                                "\"system\": \"http://terminology.hl7.org/CodeSystem/v3-ActCode\"," +
                                                                "\"code\": \""+(rs.getString("status_lanjut").equals("Ralan")?"AMB":"IMP")+"\"," +
                                                                "\"display\": \""+(rs.getString("status_lanjut").equals("Ralan")?"ambulatory":"inpatient encounter")+"\"" +
                                                            "}," +
                                                            "\"subject\": {" +
                                                                "\"reference\": \"Patient/"+idpasien+"\"," +
                                                                "\"display\": \""+rs.getString("nm_pasien")+"\"" +
                                                            "}," +
                                                            "\"participant\": [" +
                                                                "{" +
                                                                    "\"type\": [" +
                                                                        "{" +
                                                                            "\"coding\": [" +
                                                                                "{" +
                                                                                    "\"system\": \"http://terminology.hl7.org/CodeSystem/v3-ParticipationType\"," +
                                                                                    "\"code\": \"ATND\"," +
                                                                                    "\"display\": \"attender\"" +
                                                                                "}" +
                                                                            "]" +
                                                                        "}" +
                                                                    "]," +
                                                                    "\"individual\": {" +
                                                                        "\"reference\": \"Practitioner/"+iddokter+"\"," +
                                                                        "\"display\": \""+rs.getString("nama")+"\"" +
                                                                    "}" +
                                                                "}" +
                                                            "]," +
                                                            "\"period\": {" +
                                                                "\"start\": \""+rs.getString("tgl_registrasi")+"T"+rs.getString("jam_reg")+"+07:00"+"\"" +
                                                            "}," +
                                                            "\"location\": [" +
                                                                "{" +
                                                                    "\"location\": {" +
                                                                        "\"reference\": \"Location/"+rs.getString("id_lokasi_satusehat")+"\"," +
                                                                        "\"display\": \""+rs.getString("nm_poli")+"\"" +
                                                                    "}" +
                                                                "}" +
                                                            "]," +
                                                            "\"statusHistory\": [" +
                                                                "{" +
                                                                    "\"status\": \"finished\"," +
                                                                    "\"period\": {" +
                                                                        "\"start\": \""+rs.getString("tgl_registrasi")+"T"+rs.getString("jam_reg")+"+07:00"+"\"," +
                                                                        "\"end\": \""+rs.getString("pulang")+"\"" +
                                                                    "}" +
                                                                "}" +
                                                            "]," +
                                                            "\"serviceProvider\": {" +
                                                                "\"reference\": \"Organization/"+koneksiDB.IDSATUSEHAT()+"\"" +
                                                            "}," +
                                                            "\"identifier\": [" +
                                                                "{" +
                                                                    "\"system\": \"http://sys-ids.kemkes.go.id/encounter/"+koneksiDB.IDSATUSEHAT()+"\"," +
                                                                    "\"value\": \""+rs.getString("no_rawat")+"\"" +
                                                                "}" +
                                                            "]" +
                                                        "}";
                                                System.out.println("URL : "+link+"/Encounter");
                                                System.out.println("Request JSON : "+json);
                                                requestEntity = new HttpEntity(json,headers);
                                                json=api.getRest().exchange(link+"/Encounter", HttpMethod.POST, requestEntity, String.class).getBody();
                                                System.out.println("Result JSON : "+json);
                                                root = mapper.readTree(json);
                                                response = root.path("id");
                                                if(!response.asText().equals("")){
                                                    Sequel.menyimpan("satu_sehat_encounter","?,?","No.Rawat",2,new String[]{
                                                        rs.getString("no_rawat"),response.asText()
                                                    });
                                                }
                                            }catch(Exception ea){
                                                System.out.println("Notifikasi Bridging : "+ea);
                                            }
                                        } catch (Exception ef) {
                                            System.out.println("Notifikasi : "+ef);
                                        }
                                    }
                                }
                            } catch (Exception ex) {
                                System.out.println("Notif : "+ex);
                            } finally{
                                if(rs!=null){
                                    rs.close();
                                }
                                if(ps!=null){
                                    ps.close();
                                }
                            }
                        }catch(Exception ez){
                            System.out.println("Notifikasi : "+ez);
                        }
                        
                        //kirim TTV Suhu
                        try{
                            ps=koneksi.prepareStatement(
                                   "select reg_periksa.no_rawat,pasien.nm_pasien,pasien.no_ktp,satu_sehat_encounter.id_encounter,pegawai.no_ktp as ktppraktisi,pemeriksaan_ralan.tgl_perawatan,"+
                                   "pemeriksaan_ralan.jam_rawat,pemeriksaan_ralan.suhu_tubuh,ifnull(satu_sehat_observationttvsuhu.id_observation,'') as satu_sehat_observationttvsuhu "+
                                   "from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis inner join tagihan_sadewa on tagihan_sadewa.no_nota=reg_periksa.no_rawat "+
                                   "inner join satu_sehat_encounter on satu_sehat_encounter.no_rawat=reg_periksa.no_rawat inner join pemeriksaan_ralan on pemeriksaan_ralan.no_rawat=reg_periksa.no_rawat "+
                                   "inner join pegawai on pemeriksaan_ralan.nip=pegawai.nik left join satu_sehat_observationttvsuhu on satu_sehat_observationttvsuhu.no_rawat=pemeriksaan_ralan.no_rawat "+
                                   "and satu_sehat_observationttvsuhu.tgl_perawatan=pemeriksaan_ralan.tgl_perawatan and satu_sehat_observationttvsuhu.jam_rawat=pemeriksaan_ralan.jam_rawat "+
                                   "and satu_sehat_observationttvsuhu.status='Ralan' where pemeriksaan_ralan.suhu_tubuh<>'' and reg_periksa.tgl_registrasi between ? and ? "+
                                   "order by reg_periksa.tgl_registrasi,reg_periksa.jam_reg,reg_periksa.no_rawat,pemeriksaan_ralan.tgl_perawatan,pemeriksaan_ralan.jam_rawat");
                            try {
                                ps.setString(1,Tanggal1.getText());
                                ps.setString(2,Tanggal2.getText());
                                rs=ps.executeQuery();
                                while(rs.next()){
                                    if((!rs.getString("no_ktp").equals(""))&&(!rs.getString("ktppraktisi").equals(""))&&rs.getString("satu_sehat_observationttvsuhu").equals("")){
                                        try {
                                            iddokter=cekViaSatuSehat.tampilIDParktisi(rs.getString("ktppraktisi"));
                                            idpasien=cekViaSatuSehat.tampilIDPasien(rs.getString("no_ktp"));
                                            try{
                                                headers = new HttpHeaders();
                                                headers.setContentType(MediaType.APPLICATION_JSON);
                                                headers.add("Authorization", "Bearer "+api.TokenSatuSehat());
                                                json = "{" +
                                                            "\"resourceType\": \"Observation\"," +
                                                            "\"status\": \"final\"," +
                                                            "\"category\": [" +
                                                                "{" +
                                                                    "\"coding\": [" +
                                                                        "{" +
                                                                            "\"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\"," +
                                                                            "\"code\": \"vital-signs\"," +
                                                                            "\"display\": \"Vital Signs\"" +
                                                                        "}" +
                                                                    "]" +
                                                                "}" +
                                                            "]," +
                                                            "\"code\": {" +
                                                                "\"coding\": [" +
                                                                    "{" +
                                                                        "\"system\": \"http://loinc.org\"," +
                                                                        "\"code\": \"8310-5\"," +
                                                                        "\"display\": \"Body temperature\"" +
                                                                    "}" +
                                                                "]" +
                                                            "}," +
                                                            "\"subject\": {" +
                                                                "\"reference\": \"Patient/"+idpasien+"\"" +
                                                            "}," +
                                                            "\"performer\": [" +
                                                                "{" +
                                                                    "\"reference\": \"Practitioner/"+iddokter+"\"" +
                                                                "}" +
                                                            "]," +
                                                            "\"encounter\": {" +
                                                                "\"reference\": \"Encounter/"+rs.getString("id_encounter")+"\"," +
                                                                "\"display\": \"Pemeriksaan Fisik Suhu Badan di Rawat Jalan/IGD, Pasien "+rs.getString("nm_pasien")+" Pada Tanggal "+rs.getString("tgl_perawatan")+" Jam "+rs.getString("jam_rawat")+"\"" +
                                                            "}," +
                                                            "\"effectiveDateTime\": \""+rs.getString("tgl_perawatan")+"T"+rs.getString("jam_rawat")+"+07:00\"," +
                                                            "\"valueQuantity\": {" +
                                                                "\"value\": "+rs.getString("suhu_tubuh").replaceAll(",",".")+"," +
                                                                "\"unit\": \"degree Celsius\"," +
                                                                "\"system\": \"http://unitsofmeasure.org\"," +
                                                                "\"code\": \"Cel\"" +
                                                            "}" +
                                                       "}";
                                                System.out.println("URL : "+link+"/Observation");
                                                System.out.println("Request JSON : "+json);
                                                requestEntity = new HttpEntity(json,headers);
                                                json=api.getRest().exchange(link+"/Observation", HttpMethod.POST, requestEntity, String.class).getBody();
                                                System.out.println("Result JSON : "+json);
                                                root = mapper.readTree(json);
                                                response = root.path("id");
                                                if(!response.asText().equals("")){
                                                    Sequel.menyimpan("satu_sehat_observationttvsuhu","?,?,?,?,?","Observation Suhu",5,new String[]{
                                                        rs.getString("no_rawat"),rs.getString("tgl_perawatan"),rs.getString("jam_rawat"),"Ralan",response.asText()
                                                    });
                                                }
                                            }catch(Exception eg){
                                                System.out.println("Notifikasi Bridging : "+eg);
                                            }
                                        } catch (Exception ed) {
                                            System.out.println("Notifikasi : "+ed);
                                        }
                                    }
                                }
                            } catch (Exception ez) {
                                System.out.println("Notif : "+ez);
                            } finally{
                                if(rs!=null){
                                    rs.close();
                                }
                                if(ps!=null){
                                    ps.close();
                                }
                            }

                            ps=koneksi.prepareStatement(
                                   "select reg_periksa.no_rawat,pasien.nm_pasien,pasien.no_ktp,satu_sehat_encounter.id_encounter,pegawai.no_ktp as ktppraktisi,pemeriksaan_ranap.tgl_perawatan,"+
                                   "pemeriksaan_ranap.jam_rawat,pemeriksaan_ranap.suhu_tubuh,ifnull(satu_sehat_observationttvsuhu.id_observation,'') as satu_sehat_observationttvsuhu "+
                                   "from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis inner join tagihan_sadewa on tagihan_sadewa.no_nota=reg_periksa.no_rawat "+
                                   "inner join satu_sehat_encounter on satu_sehat_encounter.no_rawat=reg_periksa.no_rawat inner join pemeriksaan_ranap on pemeriksaan_ranap.no_rawat=reg_periksa.no_rawat "+
                                   "inner join pegawai on pemeriksaan_ranap.nip=pegawai.nik left join satu_sehat_observationttvsuhu on satu_sehat_observationttvsuhu.no_rawat=pemeriksaan_ranap.no_rawat "+
                                   "and satu_sehat_observationttvsuhu.tgl_perawatan=pemeriksaan_ranap.tgl_perawatan and satu_sehat_observationttvsuhu.jam_rawat=pemeriksaan_ranap.jam_rawat "+
                                   "and satu_sehat_observationttvsuhu.status='Ranap' where pemeriksaan_ranap.suhu_tubuh<>'' and reg_periksa.tgl_registrasi between ? and ? "+
                                   "order by reg_periksa.tgl_registrasi,reg_periksa.jam_reg,reg_periksa.no_rawat,pemeriksaan_ranap.tgl_perawatan,pemeriksaan_ranap.jam_rawat");
                            try {
                                ps.setString(1,Tanggal1.getText());
                                ps.setString(2,Tanggal2.getText());
                                rs=ps.executeQuery();
                                while(rs.next()){
                                    if((!rs.getString("no_ktp").equals(""))&&(!rs.getString("ktppraktisi").equals(""))&&rs.getString("satu_sehat_observationttvsuhu").equals("")){
                                        try {
                                            iddokter=cekViaSatuSehat.tampilIDParktisi(rs.getString("ktppraktisi"));
                                            idpasien=cekViaSatuSehat.tampilIDPasien(rs.getString("no_ktp"));
                                            try{
                                                headers = new HttpHeaders();
                                                headers.setContentType(MediaType.APPLICATION_JSON);
                                                headers.add("Authorization", "Bearer "+api.TokenSatuSehat());
                                                json = "{" +
                                                            "\"resourceType\": \"Observation\"," +
                                                            "\"status\": \"final\"," +
                                                            "\"category\": [" +
                                                                "{" +
                                                                    "\"coding\": [" +
                                                                        "{" +
                                                                            "\"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\"," +
                                                                            "\"code\": \"vital-signs\"," +
                                                                            "\"display\": \"Vital Signs\"" +
                                                                        "}" +
                                                                    "]" +
                                                                "}" +
                                                            "]," +
                                                            "\"code\": {" +
                                                                "\"coding\": [" +
                                                                    "{" +
                                                                        "\"system\": \"http://loinc.org\"," +
                                                                        "\"code\": \"8310-5\"," +
                                                                        "\"display\": \"Body temperature\"" +
                                                                    "}" +
                                                                "]" +
                                                            "}," +
                                                            "\"subject\": {" +
                                                                "\"reference\": \"Patient/"+idpasien+"\"" +
                                                            "}," +
                                                            "\"performer\": [" +
                                                                "{" +
                                                                    "\"reference\": \"Practitioner/"+iddokter+"\"" +
                                                                "}" +
                                                            "]," +
                                                            "\"encounter\": {" +
                                                                "\"reference\": \"Encounter/"+rs.getString("id_encounter")+"\"," +
                                                                "\"display\": \"Pemeriksaan Fisik Suhu Badan di Rawat Inap, Pasien "+rs.getString("nm_pasien")+" Pada Tanggal "+rs.getString("tgl_perawatan")+" Jam "+rs.getString("jam_rawat")+"\"" +
                                                            "}," +
                                                            "\"effectiveDateTime\": \""+rs.getString("tgl_perawatan")+"T"+rs.getString("jam_rawat")+"+07:00\"," +
                                                            "\"valueQuantity\": {" +
                                                                "\"value\": "+rs.getString("suhu_tubuh").replaceAll(",",".")+"," +
                                                                "\"unit\": \"degree Celsius\"," +
                                                                "\"system\": \"http://unitsofmeasure.org\"," +
                                                                "\"code\": \"Cel\"" +
                                                            "}" +
                                                       "}";
                                                System.out.println("URL : "+link+"/Observation");
                                                System.out.println("Request JSON : "+json);
                                                requestEntity = new HttpEntity(json,headers);
                                                json=api.getRest().exchange(link+"/Observation", HttpMethod.POST, requestEntity, String.class).getBody();
                                                System.out.println("Result JSON : "+json);
                                                root = mapper.readTree(json);
                                                response = root.path("id");
                                                if(!response.asText().equals("")){
                                                    Sequel.menyimpan("satu_sehat_observationttvsuhu","?,?,?,?,?","Observation Suhu",5,new String[]{
                                                        rs.getString("no_rawat"),rs.getString("tgl_perawatan"),rs.getString("jam_rawat"),"Ranap",response.asText()
                                                    });
                                                }
                                            }catch(Exception eg){
                                                System.out.println("Notifikasi Bridging : "+eg);
                                            }
                                        } catch (Exception ed) {
                                            System.out.println("Notifikasi : "+ed);
                                        }
                                    }
                                }
                            } catch (Exception ez) {
                                System.out.println("Notif : "+ez);
                            } finally{
                                if(rs!=null){
                                    rs.close();
                                }
                                if(ps!=null){
                                    ps.close();
                                }
                            }
                        }catch(Exception ef){
                            System.out.println("Notifikasi : "+ef);
                        }
                        
                        //kirim TTV respirasi
                        try{
                            ps=koneksi.prepareStatement(
                                   "select reg_periksa.no_rawat,pasien.nm_pasien,pasien.no_ktp,satu_sehat_encounter.id_encounter,pegawai.no_ktp as ktppraktisi,pemeriksaan_ralan.tgl_perawatan,"+
                                   "pemeriksaan_ralan.jam_rawat,pemeriksaan_ralan.respirasi,ifnull(satu_sehat_observationttvrespirasi.id_observation,'') as satu_sehat_observationttvrespirasi "+
                                   "from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis inner join tagihan_sadewa on tagihan_sadewa.no_nota=reg_periksa.no_rawat "+
                                   "inner join satu_sehat_encounter on satu_sehat_encounter.no_rawat=reg_periksa.no_rawat inner join pemeriksaan_ralan on pemeriksaan_ralan.no_rawat=reg_periksa.no_rawat "+
                                   "inner join pegawai on pemeriksaan_ralan.nip=pegawai.nik left join satu_sehat_observationttvrespirasi on satu_sehat_observationttvrespirasi.no_rawat=pemeriksaan_ralan.no_rawat "+
                                   "and satu_sehat_observationttvrespirasi.tgl_perawatan=pemeriksaan_ralan.tgl_perawatan and satu_sehat_observationttvrespirasi.jam_rawat=pemeriksaan_ralan.jam_rawat "+
                                   "and satu_sehat_observationttvrespirasi.status='Ralan' where pemeriksaan_ralan.respirasi<>'' and reg_periksa.tgl_registrasi between ? and ? "+
                                   "order by reg_periksa.tgl_registrasi,reg_periksa.jam_reg,reg_periksa.no_rawat,pemeriksaan_ralan.tgl_perawatan,pemeriksaan_ralan.jam_rawat");
                            try {
                                ps.setString(1,Tanggal1.getText());
                                ps.setString(2,Tanggal2.getText());
                                rs=ps.executeQuery();
                                while(rs.next()){
                                    if((!rs.getString("no_ktp").equals(""))&&(!rs.getString("ktppraktisi").equals(""))&&rs.getString("satu_sehat_observationttvrespirasi").equals("")){
                                        try {
                                            iddokter=cekViaSatuSehat.tampilIDParktisi(rs.getString("ktppraktisi"));
                                            idpasien=cekViaSatuSehat.tampilIDPasien(rs.getString("no_ktp"));
                                            try{
                                                headers = new HttpHeaders();
                                                headers.setContentType(MediaType.APPLICATION_JSON);
                                                headers.add("Authorization", "Bearer "+api.TokenSatuSehat());
                                                json = "{" +
                                                            "\"resourceType\": \"Observation\"," +
                                                            "\"status\": \"final\"," +
                                                            "\"category\": [" +
                                                                "{" +
                                                                    "\"coding\": [" +
                                                                        "{" +
                                                                            "\"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\"," +
                                                                            "\"code\": \"vital-signs\"," +
                                                                            "\"display\": \"Vital Signs\"" +
                                                                        "}" +
                                                                    "]" +
                                                                "}" +
                                                            "]," +
                                                            "\"code\": {" +
                                                                "\"coding\": [" +
                                                                    "{" +
                                                                        "\"system\": \"http://loinc.org\"," +
                                                                        "\"code\": \"9279-1\"," +
                                                                        "\"display\": \"Respiratory rate\"" +
                                                                    "}" +
                                                                "]" +
                                                            "}," +
                                                            "\"subject\": {" +
                                                                "\"reference\": \"Patient/"+idpasien+"\"" +
                                                            "}," +
                                                            "\"performer\": [" +
                                                                "{" +
                                                                    "\"reference\": \"Practitioner/"+iddokter+"\"" +
                                                                "}" +
                                                            "]," +
                                                            "\"encounter\": {" +
                                                                "\"reference\": \"Encounter/"+rs.getString("id_encounter")+"\"," +
                                                                "\"display\": \"Pemeriksaan Fisik Respirasi di Rawat Jalan/IGD, Pasien "+rs.getString("nm_pasien")+" Pada Tanggal "+rs.getString("tgl_perawatan")+" Jam "+rs.getString("jam_rawat")+"\"" +
                                                            "}," +
                                                             "\"effectiveDateTime\": \""+rs.getString("tgl_perawatan")+"T"+rs.getString("jam_rawat")+"+07:00\"," +
                                                            "\"valueQuantity\": {" +
                                                                "\"value\": "+rs.getString("respirasi")+"," +
                                                                "\"unit\": \"breaths/minute\"," +
                                                                "\"system\": \"http://unitsofmeasure.org\"," +
                                                                "\"code\": \"/min\"" +
                                                            "}" +
                                                       "}";
                                                System.out.println("URL : "+link+"/Observation");
                                                System.out.println("Request JSON : "+json);
                                                requestEntity = new HttpEntity(json,headers);
                                                json=api.getRest().exchange(link+"/Observation", HttpMethod.POST, requestEntity, String.class).getBody();
                                                System.out.println("Result JSON : "+json);
                                                root = mapper.readTree(json);
                                                response = root.path("id");
                                                if(!response.asText().equals("")){
                                                    Sequel.menyimpan("satu_sehat_observationttvrespirasi","?,?,?,?,?","Observation Respirasi",5,new String[]{
                                                        rs.getString("no_rawat"),rs.getString("tgl_perawatan"),rs.getString("jam_rawat"),"Ralan",response.asText()
                                                    });
                                                }
                                            }catch(Exception ef){
                                                System.out.println("Notifikasi Bridging : "+ef);
                                            }
                                        } catch (Exception eg) {
                                            System.out.println("Notifikasi : "+eg);
                                        }
                                    }
                                }
                            } catch (Exception ez) {
                                System.out.println("Notif : "+ez);
                            } finally{
                                if(rs!=null){
                                    rs.close();
                                }
                                if(ps!=null){
                                    ps.close();
                                }
                            }

                            ps=koneksi.prepareStatement(
                                   "select reg_periksa.no_rawat,pasien.nm_pasien,pasien.no_ktp,satu_sehat_encounter.id_encounter,pegawai.no_ktp as ktppraktisi,pemeriksaan_ranap.tgl_perawatan,"+
                                   "pemeriksaan_ranap.jam_rawat,pemeriksaan_ranap.respirasi,ifnull(satu_sehat_observationttvrespirasi.id_observation,'') as satu_sehat_observationttvrespirasi "+
                                   "from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis inner join tagihan_sadewa on tagihan_sadewa.no_nota=reg_periksa.no_rawat "+
                                   "inner join satu_sehat_encounter on satu_sehat_encounter.no_rawat=reg_periksa.no_rawat inner join pemeriksaan_ranap on pemeriksaan_ranap.no_rawat=reg_periksa.no_rawat "+
                                   "inner join pegawai on pemeriksaan_ranap.nip=pegawai.nik left join satu_sehat_observationttvrespirasi on satu_sehat_observationttvrespirasi.no_rawat=pemeriksaan_ranap.no_rawat "+
                                   "and satu_sehat_observationttvrespirasi.tgl_perawatan=pemeriksaan_ranap.tgl_perawatan and satu_sehat_observationttvrespirasi.jam_rawat=pemeriksaan_ranap.jam_rawat "+
                                   "and satu_sehat_observationttvrespirasi.status='Ranap' where pemeriksaan_ranap.respirasi<>'' and reg_periksa.tgl_registrasi between ? and ? "+
                                   "order by reg_periksa.tgl_registrasi,reg_periksa.jam_reg,reg_periksa.no_rawat,pemeriksaan_ranap.tgl_perawatan,pemeriksaan_ranap.jam_rawat");
                            try {
                                ps.setString(1,Tanggal1.getText());
                                ps.setString(2,Tanggal2.getText());
                                rs=ps.executeQuery();
                                while(rs.next()){
                                    if((!rs.getString("no_ktp").equals(""))&&(!rs.getString("ktppraktisi").equals(""))&&rs.getString("satu_sehat_observationttvrespirasi").equals("")){
                                        try {
                                            iddokter=cekViaSatuSehat.tampilIDParktisi(rs.getString("ktppraktisi"));
                                            idpasien=cekViaSatuSehat.tampilIDPasien(rs.getString("no_ktp"));
                                            try{
                                                headers = new HttpHeaders();
                                                headers.setContentType(MediaType.APPLICATION_JSON);
                                                headers.add("Authorization", "Bearer "+api.TokenSatuSehat());
                                                json = "{" +
                                                            "\"resourceType\": \"Observation\"," +
                                                            "\"status\": \"final\"," +
                                                            "\"category\": [" +
                                                                "{" +
                                                                    "\"coding\": [" +
                                                                        "{" +
                                                                            "\"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\"," +
                                                                            "\"code\": \"vital-signs\"," +
                                                                            "\"display\": \"Vital Signs\"" +
                                                                        "}" +
                                                                    "]" +
                                                                "}" +
                                                            "]," +
                                                            "\"code\": {" +
                                                                "\"coding\": [" +
                                                                    "{" +
                                                                        "\"system\": \"http://loinc.org\"," +
                                                                        "\"code\": \"9279-1\"," +
                                                                        "\"display\": \"Respiratory rate\"" +
                                                                    "}" +
                                                                "]" +
                                                            "}," +
                                                            "\"subject\": {" +
                                                                "\"reference\": \"Patient/"+idpasien+"\"" +
                                                            "}," +
                                                            "\"performer\": [" +
                                                                "{" +
                                                                    "\"reference\": \"Practitioner/"+iddokter+"\"" +
                                                                "}" +
                                                            "]," +
                                                            "\"encounter\": {" +
                                                                "\"reference\": \"Encounter/"+rs.getString("id_encounter")+"\"," +
                                                                "\"display\": \"Pemeriksaan Fisik Respirasi di Rawat Inap, Pasien "+rs.getString("nm_pasien")+" Pada Tanggal "+rs.getString("tgl_perawatan")+" Jam "+rs.getString("jam_rawat")+"\"" +
                                                            "}," +
                                                             "\"effectiveDateTime\": \""+rs.getString("tgl_perawatan")+"T"+rs.getString("jam_rawat")+"+07:00\"," +
                                                            "\"valueQuantity\": {" +
                                                                "\"value\": "+rs.getString("respirasi")+"," +
                                                                "\"unit\": \"breaths/minute\"," +
                                                                "\"system\": \"http://unitsofmeasure.org\"," +
                                                                "\"code\": \"/min\"" +
                                                            "}" +
                                                       "}";
                                                System.out.println("URL : "+link+"/Observation");
                                                System.out.println("Request JSON : "+json);
                                                requestEntity = new HttpEntity(json,headers);
                                                json=api.getRest().exchange(link+"/Observation", HttpMethod.POST, requestEntity, String.class).getBody();
                                                System.out.println("Result JSON : "+json);
                                                root = mapper.readTree(json);
                                                response = root.path("id");
                                                if(!response.asText().equals("")){
                                                    Sequel.menyimpan("satu_sehat_observationttvrespirasi","?,?,?,?,?","Observation Respirasi",5,new String[]{
                                                        rs.getString("no_rawat"),rs.getString("tgl_perawatan"),rs.getString("jam_rawat"),"Ranap",response.asText()
                                                    });
                                                }
                                            }catch(Exception ef){
                                                System.out.println("Notifikasi Bridging : "+ef);
                                            }
                                        } catch (Exception eg) {
                                            System.out.println("Notifikasi : "+eg);
                                        }
                                    }
                                }
                            } catch (Exception ez) {
                                System.out.println("Notif : "+ez);
                            } finally{
                                if(rs!=null){
                                    rs.close();
                                }
                                if(ps!=null){
                                    ps.close();
                                }
                            }
                        }catch(Exception ex){
                            System.out.println("Notifikasi : "+ex);
                        }
                        
                        //kirim TTV nadi
                        try{
                            ps=koneksi.prepareStatement(
                                   "select reg_periksa.no_rawat,pasien.nm_pasien,pasien.no_ktp,satu_sehat_encounter.id_encounter,pegawai.no_ktp as ktppraktisi,pemeriksaan_ralan.tgl_perawatan,"+
                                   "pemeriksaan_ralan.jam_rawat,pemeriksaan_ralan.nadi,ifnull(satu_sehat_observationttvnadi.id_observation,'') as satu_sehat_observationttvnadi "+
                                   "from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis inner join tagihan_sadewa on tagihan_sadewa.no_nota=reg_periksa.no_rawat "+
                                   "inner join satu_sehat_encounter on satu_sehat_encounter.no_rawat=reg_periksa.no_rawat inner join pemeriksaan_ralan on pemeriksaan_ralan.no_rawat=reg_periksa.no_rawat "+
                                   "inner join pegawai on pemeriksaan_ralan.nip=pegawai.nik left join satu_sehat_observationttvnadi on satu_sehat_observationttvnadi.no_rawat=pemeriksaan_ralan.no_rawat "+
                                   "and satu_sehat_observationttvnadi.tgl_perawatan=pemeriksaan_ralan.tgl_perawatan and satu_sehat_observationttvnadi.jam_rawat=pemeriksaan_ralan.jam_rawat "+
                                   "and satu_sehat_observationttvnadi.status='Ralan' where pemeriksaan_ralan.nadi<>'' and reg_periksa.tgl_registrasi between ? and ? "+
                                   "order by reg_periksa.tgl_registrasi,reg_periksa.jam_reg,reg_periksa.no_rawat,pemeriksaan_ralan.tgl_perawatan,pemeriksaan_ralan.jam_rawat");
                            try {
                                ps.setString(1,Tanggal1.getText());
                                ps.setString(2,Tanggal2.getText());
                                rs=ps.executeQuery();
                                while(rs.next()){
                                    if((!rs.getString("no_ktp").equals(""))&&(!rs.getString("ktppraktisi").equals(""))&&rs.getString("satu_sehat_observationttvnadi").equals("")){
                                        try {
                                            iddokter=cekViaSatuSehat.tampilIDParktisi(rs.getString("ktppraktisi"));
                                            idpasien=cekViaSatuSehat.tampilIDPasien(rs.getString("no_ktp"));
                                            try{
                                                headers = new HttpHeaders();
                                                headers.setContentType(MediaType.APPLICATION_JSON);
                                                headers.add("Authorization", "Bearer "+api.TokenSatuSehat());
                                                json = "{" +
                                                            "\"resourceType\": \"Observation\"," +
                                                            "\"status\": \"final\"," +
                                                            "\"category\": [" +
                                                                "{" +
                                                                    "\"coding\": [" +
                                                                        "{" +
                                                                            "\"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\"," +
                                                                            "\"code\": \"vital-signs\"," +
                                                                            "\"display\": \"Vital Signs\"" +
                                                                        "}" +
                                                                    "]" +
                                                                "}" +
                                                            "]," +
                                                            "\"code\": {" +
                                                                "\"coding\": [" +
                                                                    "{" +
                                                                        "\"system\": \"http://loinc.org\"," +
                                                                        "\"code\": \"8867-4\"," +
                                                                        "\"display\": \"Heart rate\"" +
                                                                    "}" +
                                                                "]" +
                                                            "}," +
                                                            "\"subject\": {" +
                                                                "\"reference\": \"Patient/"+idpasien+"\"" +
                                                            "}," +
                                                            "\"performer\": [" +
                                                                "{" +
                                                                    "\"reference\": \"Practitioner/"+iddokter+"\"" +
                                                                "}" +
                                                            "]," +
                                                            "\"encounter\": {" +
                                                                "\"reference\": \"Encounter/"+rs.getString("id_encounter")+"\"," +
                                                                "\"display\": \"Pemeriksaan Fisik Nadi di Rawat Jalan/IGD, Pasien "+rs.getString("nm_pasien")+" Pada Tanggal "+rs.getString("tgl_perawatan")+" Jam "+rs.getString("jam_rawat")+"\"" +
                                                            "}," +
                                                            "\"effectiveDateTime\": \""+rs.getString("tgl_perawatan")+"T"+rs.getString("jam_rawat")+"+07:00\"," +
                                                            "\"valueQuantity\": {" +
                                                                "\"value\": "+rs.getString("nadi")+"," +
                                                                "\"unit\": \"breaths/minute\"," +
                                                                "\"system\": \"http://unitsofmeasure.org\"," +
                                                                "\"code\": \"/min\"" +
                                                            "}" +
                                                       "}";
                                                System.out.println("URL : "+link+"/Observation");
                                                System.out.println("Request JSON : "+json);
                                                requestEntity = new HttpEntity(json,headers);
                                                json=api.getRest().exchange(link+"/Observation", HttpMethod.POST, requestEntity, String.class).getBody();
                                                System.out.println("Result JSON : "+json);
                                                root = mapper.readTree(json);
                                                response = root.path("id");
                                                if(!response.asText().equals("")){
                                                    Sequel.menyimpan("satu_sehat_observationttvnadi","?,?,?,?,?","Observation Nadi",5,new String[]{
                                                        rs.getString("no_rawat"),rs.getString("tgl_perawatan"),rs.getString("jam_rawat"),"Ralan",response.asText()
                                                    });
                                                }
                                            }catch(Exception ea){
                                                System.out.println("Notifikasi Bridging : "+ea);
                                            }
                                        } catch (Exception es) {
                                            System.out.println("Notifikasi : "+es);
                                        }
                                    }
                                }
                            } catch (Exception ez) {
                                System.out.println("Notif : "+ez);
                            } finally{
                                if(rs!=null){
                                    rs.close();
                                }
                                if(ps!=null){
                                    ps.close();
                                }
                            }

                            ps=koneksi.prepareStatement(
                                   "select reg_periksa.no_rawat,pasien.nm_pasien,pasien.no_ktp,satu_sehat_encounter.id_encounter,pegawai.no_ktp as ktppraktisi,pemeriksaan_ranap.tgl_perawatan,"+
                                   "pemeriksaan_ranap.jam_rawat,pemeriksaan_ranap.nadi,ifnull(satu_sehat_observationttvnadi.id_observation,'') as satu_sehat_observationttvnadi "+
                                   "from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis inner join tagihan_sadewa on tagihan_sadewa.no_nota=reg_periksa.no_rawat "+
                                   "inner join satu_sehat_encounter on satu_sehat_encounter.no_rawat=reg_periksa.no_rawat inner join pemeriksaan_ranap on pemeriksaan_ranap.no_rawat=reg_periksa.no_rawat "+
                                   "inner join pegawai on pemeriksaan_ranap.nip=pegawai.nik left join satu_sehat_observationttvnadi on satu_sehat_observationttvnadi.no_rawat=pemeriksaan_ranap.no_rawat "+
                                   "and satu_sehat_observationttvnadi.tgl_perawatan=pemeriksaan_ranap.tgl_perawatan and satu_sehat_observationttvnadi.jam_rawat=pemeriksaan_ranap.jam_rawat "+
                                   "and satu_sehat_observationttvnadi.status='Ranap' where pemeriksaan_ranap.nadi<>'' and reg_periksa.tgl_registrasi between ? and ? "+
                                   "order by reg_periksa.tgl_registrasi,reg_periksa.jam_reg,reg_periksa.no_rawat,pemeriksaan_ranap.tgl_perawatan,pemeriksaan_ranap.jam_rawat");
                            try {
                                ps.setString(1,Tanggal1.getText());
                                ps.setString(2,Tanggal2.getText());
                                rs=ps.executeQuery();
                                while(rs.next()){
                                    if((!rs.getString("no_ktp").equals(""))&&(!rs.getString("ktppraktisi").equals(""))&&rs.getString("satu_sehat_observationttvnadi").equals("")){
                                        try {
                                            iddokter=cekViaSatuSehat.tampilIDParktisi(rs.getString("ktppraktisi"));
                                            idpasien=cekViaSatuSehat.tampilIDPasien(rs.getString("no_ktp"));
                                            try{
                                                headers = new HttpHeaders();
                                                headers.setContentType(MediaType.APPLICATION_JSON);
                                                headers.add("Authorization", "Bearer "+api.TokenSatuSehat());
                                                json = "{" +
                                                            "\"resourceType\": \"Observation\"," +
                                                            "\"status\": \"final\"," +
                                                            "\"category\": [" +
                                                                "{" +
                                                                    "\"coding\": [" +
                                                                        "{" +
                                                                            "\"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\"," +
                                                                            "\"code\": \"vital-signs\"," +
                                                                            "\"display\": \"Vital Signs\"" +
                                                                        "}" +
                                                                    "]" +
                                                                "}" +
                                                            "]," +
                                                            "\"code\": {" +
                                                                "\"coding\": [" +
                                                                    "{" +
                                                                        "\"system\": \"http://loinc.org\"," +
                                                                        "\"code\": \"8867-4\"," +
                                                                        "\"display\": \"Heart rate\"" +
                                                                    "}" +
                                                                "]" +
                                                            "}," +
                                                            "\"subject\": {" +
                                                                "\"reference\": \"Patient/"+idpasien+"\"" +
                                                            "}," +
                                                            "\"performer\": [" +
                                                                "{" +
                                                                    "\"reference\": \"Practitioner/"+iddokter+"\"" +
                                                                "}" +
                                                            "]," +
                                                            "\"encounter\": {" +
                                                                "\"reference\": \"Encounter/"+rs.getString("id_encounter")+"\"," +
                                                                "\"display\": \"Pemeriksaan Fisik Nadi di Rawat Inap, Pasien "+rs.getString("nm_pasien")+" Pada Tanggal "+rs.getString("tgl_perawatan")+" Jam "+rs.getString("jam_rawat")+"\"" +
                                                            "}," +
                                                            "\"effectiveDateTime\": \""+rs.getString("tgl_perawatan")+"T"+rs.getString("jam_rawat")+"+07:00\"," +
                                                            "\"valueQuantity\": {" +
                                                                "\"value\": "+rs.getString("nadi")+"," +
                                                                "\"unit\": \"breaths/minute\"," +
                                                                "\"system\": \"http://unitsofmeasure.org\"," +
                                                                "\"code\": \"/min\"" +
                                                            "}" +
                                                       "}";
                                                System.out.println("URL : "+link+"/Observation");
                                                System.out.println("Request JSON : "+json);
                                                requestEntity = new HttpEntity(json,headers);
                                                json=api.getRest().exchange(link+"/Observation", HttpMethod.POST, requestEntity, String.class).getBody();
                                                System.out.println("Result JSON : "+json);
                                                root = mapper.readTree(json);
                                                response = root.path("id");
                                                if(!response.asText().equals("")){
                                                    Sequel.menyimpan("satu_sehat_observationttvnadi","?,?,?,?,?","Observation Nadi",5,new String[]{
                                                        rs.getString("no_rawat"),rs.getString("tgl_perawatan"),rs.getString("jam_rawat"),"Ranap",response.asText()
                                                    });
                                                }
                                            }catch(Exception ea){
                                                System.out.println("Notifikasi Bridging : "+ea);
                                            }
                                        } catch (Exception es) {
                                            System.out.println("Notifikasi : "+es);
                                        }
                                    }
                                }
                            } catch (Exception ez) {
                                System.out.println("Notif : "+ez);
                            } finally{
                                if(rs!=null){
                                    rs.close();
                                }
                                if(ps!=null){
                                    ps.close();
                                }
                            }
                        }catch(Exception ex){
                            System.out.println("Notifikasi : "+ex);
                        }
                        
                        //kirim TTV SPO2
                        try{
                            ps=koneksi.prepareStatement(
                                   "select reg_periksa.no_rawat,pasien.nm_pasien,pasien.no_ktp,satu_sehat_encounter.id_encounter,pegawai.no_ktp as ktppraktisi,pemeriksaan_ralan.tgl_perawatan,"+
                                   "pemeriksaan_ralan.jam_rawat,pemeriksaan_ralan.spo2,ifnull(satu_sehat_observationttvspo2.id_observation,'') as satu_sehat_observationttvspo2 "+
                                   "from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis inner join tagihan_sadewa on tagihan_sadewa.no_nota=reg_periksa.no_rawat "+
                                   "inner join satu_sehat_encounter on satu_sehat_encounter.no_rawat=reg_periksa.no_rawat inner join pemeriksaan_ralan on pemeriksaan_ralan.no_rawat=reg_periksa.no_rawat "+
                                   "inner join pegawai on pemeriksaan_ralan.nip=pegawai.nik left join satu_sehat_observationttvspo2 on satu_sehat_observationttvspo2.no_rawat=pemeriksaan_ralan.no_rawat "+
                                   "and satu_sehat_observationttvspo2.tgl_perawatan=pemeriksaan_ralan.tgl_perawatan and satu_sehat_observationttvspo2.jam_rawat=pemeriksaan_ralan.jam_rawat "+
                                   "and satu_sehat_observationttvspo2.status='Ralan' where pemeriksaan_ralan.spo2<>'' and reg_periksa.tgl_registrasi between ? and ? "+
                                   "order by reg_periksa.tgl_registrasi,reg_periksa.jam_reg,reg_periksa.no_rawat,pemeriksaan_ralan.tgl_perawatan,pemeriksaan_ralan.jam_rawat");
                            try {
                                ps.setString(1,Tanggal1.getText());
                                ps.setString(2,Tanggal2.getText());
                                rs=ps.executeQuery();
                                while(rs.next()){
                                    if((!rs.getString("no_ktp").equals(""))&&(!rs.getString("ktppraktisi").equals(""))&&rs.getString("satu_sehat_observationttvspo2").equals("")){
                                        try {
                                            iddokter=cekViaSatuSehat.tampilIDParktisi(rs.getString("ktppraktisi"));
                                            idpasien=cekViaSatuSehat.tampilIDPasien(rs.getString("no_ktp"));
                                            try{
                                                headers = new HttpHeaders();
                                                headers.setContentType(MediaType.APPLICATION_JSON);
                                                headers.add("Authorization", "Bearer "+api.TokenSatuSehat());
                                                json = "{" +
                                                            "\"resourceType\": \"Observation\"," +
                                                            "\"status\": \"final\"," +
                                                            "\"category\": [" +
                                                                "{" +
                                                                    "\"coding\": [" +
                                                                        "{" +
                                                                            "\"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\"," +
                                                                            "\"code\": \"vital-signs\"," +
                                                                            "\"display\": \"Vital Signs\"" +
                                                                        "}" +
                                                                    "]" +
                                                                "}" +
                                                            "]," +
                                                            "\"code\": {" +
                                                                "\"coding\": [" +
                                                                    "{" +
                                                                        "\"system\": \"http://loinc.org\"," +
                                                                        "\"code\": \"59408-5\"," +
                                                                        "\"display\": \"Oxygen saturation\"" +
                                                                    "}" +
                                                                "]" +
                                                            "}," +
                                                            "\"subject\": {" +
                                                                "\"reference\": \"Patient/"+idpasien+"\"" +
                                                            "}," +
                                                            "\"performer\": [" +
                                                                "{" +
                                                                    "\"reference\": \"Practitioner/"+iddokter+"\"" +
                                                                "}" +
                                                            "]," +
                                                            "\"encounter\": {" +
                                                                "\"reference\": \"Encounter/"+rs.getString("id_encounter")+"\"," +
                                                                "\"display\": \"Pemeriksaan Fisik SpO2  di Rawat Jalan/IGD, Pasien "+rs.getString("nm_pasien")+" Pada Tanggal "+rs.getString("tgl_perawatan")+" Jam "+rs.getString("jam_rawat")+"\"" +
                                                            "}," +
                                                            "\"effectiveDateTime\": \""+rs.getString("tgl_perawatan")+"T"+rs.getString("jam_rawat")+"+07:00\"," +
                                                            "\"valueQuantity\": {" +
                                                                "\"value\": "+rs.getString("spo2")+"," +
                                                                "\"unit\": \"percent saturation\"," +
                                                                "\"system\": \"http://unitsofmeasure.org\"," +
                                                                "\"code\": \"%\"" +
                                                            "}" +
                                                       "}";
                                                System.out.println("URL : "+link+"/Observation");
                                                System.out.println("Request JSON : "+json);
                                                requestEntity = new HttpEntity(json,headers);
                                                json=api.getRest().exchange(link+"/Observation", HttpMethod.POST, requestEntity, String.class).getBody();
                                                System.out.println("Result JSON : "+json);
                                                root = mapper.readTree(json);
                                                response = root.path("id");
                                                if(!response.asText().equals("")){
                                                    Sequel.menyimpan("satu_sehat_observationttvspo2","?,?,?,?,?","Observation SpO2",5,new String[]{
                                                        rs.getString("no_rawat"),rs.getString("tgl_perawatan"),rs.getString("jam_rawat"),"Ralan",response.asText()
                                                    });
                                                }
                                            }catch(Exception ef){
                                                System.out.println("Notifikasi Bridging : "+ef);
                                            }
                                        } catch (Exception ex) {
                                            System.out.println("Notifikasi : "+ex);
                                        }
                                    }
                                }
                            } catch (Exception ez) {
                                System.out.println("Notif : "+ez);
                            } finally{
                                if(rs!=null){
                                    rs.close();
                                }
                                if(ps!=null){
                                    ps.close();
                                }
                            }

                            ps=koneksi.prepareStatement(
                                   "select reg_periksa.no_rawat,pasien.nm_pasien,pasien.no_ktp,satu_sehat_encounter.id_encounter,pegawai.no_ktp as ktppraktisi,pemeriksaan_ranap.tgl_perawatan,"+
                                   "pemeriksaan_ranap.jam_rawat,pemeriksaan_ranap.spo2,ifnull(satu_sehat_observationttvspo2.id_observation,'') as satu_sehat_observationttvspo2 "+
                                   "from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis inner join tagihan_sadewa on tagihan_sadewa.no_nota=reg_periksa.no_rawat "+
                                   "inner join satu_sehat_encounter on satu_sehat_encounter.no_rawat=reg_periksa.no_rawat inner join pemeriksaan_ranap on pemeriksaan_ranap.no_rawat=reg_periksa.no_rawat "+
                                   "inner join pegawai on pemeriksaan_ranap.nip=pegawai.nik left join satu_sehat_observationttvspo2 on satu_sehat_observationttvspo2.no_rawat=pemeriksaan_ranap.no_rawat "+
                                   "and satu_sehat_observationttvspo2.tgl_perawatan=pemeriksaan_ranap.tgl_perawatan and satu_sehat_observationttvspo2.jam_rawat=pemeriksaan_ranap.jam_rawat "+
                                   "and satu_sehat_observationttvspo2.status='Ranap' where pemeriksaan_ranap.spo2<>'' and reg_periksa.tgl_registrasi between ? and ? "+
                                   "order by reg_periksa.tgl_registrasi,reg_periksa.jam_reg,reg_periksa.no_rawat,pemeriksaan_ranap.tgl_perawatan,pemeriksaan_ranap.jam_rawat");
                            try {
                                ps.setString(1,Tanggal1.getText());
                                ps.setString(2,Tanggal2.getText());
                                rs=ps.executeQuery();
                                while(rs.next()){
                                    if((!rs.getString("no_ktp").equals(""))&&(!rs.getString("ktppraktisi").equals(""))&&rs.getString("satu_sehat_observationttvspo2").equals("")){
                                        try {
                                            iddokter=cekViaSatuSehat.tampilIDParktisi(rs.getString("ktppraktisi"));
                                            idpasien=cekViaSatuSehat.tampilIDPasien(rs.getString("no_ktp"));
                                            try{
                                                headers = new HttpHeaders();
                                                headers.setContentType(MediaType.APPLICATION_JSON);
                                                headers.add("Authorization", "Bearer "+api.TokenSatuSehat());
                                                json = "{" +
                                                            "\"resourceType\": \"Observation\"," +
                                                            "\"status\": \"final\"," +
                                                            "\"category\": [" +
                                                                "{" +
                                                                    "\"coding\": [" +
                                                                        "{" +
                                                                            "\"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\"," +
                                                                            "\"code\": \"vital-signs\"," +
                                                                            "\"display\": \"Vital Signs\"" +
                                                                        "}" +
                                                                    "]" +
                                                                "}" +
                                                            "]," +
                                                            "\"code\": {" +
                                                                "\"coding\": [" +
                                                                    "{" +
                                                                        "\"system\": \"http://loinc.org\"," +
                                                                        "\"code\": \"59408-5\"," +
                                                                        "\"display\": \"Oxygen saturation\"" +
                                                                    "}" +
                                                                "]" +
                                                            "}," +
                                                            "\"subject\": {" +
                                                                "\"reference\": \"Patient/"+idpasien+"\"" +
                                                            "}," +
                                                            "\"performer\": [" +
                                                                "{" +
                                                                    "\"reference\": \"Practitioner/"+iddokter+"\"" +
                                                                "}" +
                                                            "]," +
                                                            "\"encounter\": {" +
                                                                "\"reference\": \"Encounter/"+rs.getString("id_encounter")+"\"," +
                                                                "\"display\": \"Pemeriksaan Fisik SpO2  di Rawat Jalan/IGD, Pasien "+rs.getString("nm_pasien")+" Pada Tanggal "+rs.getString("tgl_perawatan")+" Jam "+rs.getString("jam_rawat")+"\"" +
                                                            "}," +
                                                            "\"effectiveDateTime\": \""+rs.getString("tgl_perawatan")+"T"+rs.getString("jam_rawat")+"+07:00\"," +
                                                            "\"valueQuantity\": {" +
                                                                "\"value\": "+rs.getString("spo2")+"," +
                                                                "\"unit\": \"percent saturation\"," +
                                                                "\"system\": \"http://unitsofmeasure.org\"," +
                                                                "\"code\": \"%\"" +
                                                            "}" +
                                                       "}";
                                                System.out.println("URL : "+link+"/Observation");
                                                System.out.println("Request JSON : "+json);
                                                requestEntity = new HttpEntity(json,headers);
                                                json=api.getRest().exchange(link+"/Observation", HttpMethod.POST, requestEntity, String.class).getBody();
                                                System.out.println("Result JSON : "+json);
                                                root = mapper.readTree(json);
                                                response = root.path("id");
                                                if(!response.asText().equals("")){
                                                    Sequel.menyimpan("satu_sehat_observationttvspo2","?,?,?,?,?","Observation SpO2",5,new String[]{
                                                        rs.getString("no_rawat"),rs.getString("tgl_perawatan"),rs.getString("jam_rawat"),"Ranap",response.asText()
                                                    });
                                                }
                                            }catch(Exception ef){
                                                System.out.println("Notifikasi Bridging : "+ef);
                                            }
                                        } catch (Exception ex) {
                                            System.out.println("Notifikasi : "+ex);
                                        }
                                    }
                                }
                            } catch (Exception ez) {
                                System.out.println("Notif : "+ez);
                            } finally{
                                if(rs!=null){
                                    rs.close();
                                }
                                if(ps!=null){
                                    ps.close();
                                }
                            }
                        }catch(Exception ex){
                            System.out.println("Notifikasi : "+ex);
                        }
                        
                        //kirim TTV GCS
                        try{
                            ps=koneksi.prepareStatement(
                                   "select reg_periksa.no_rawat,pasien.nm_pasien,pasien.no_ktp,satu_sehat_encounter.id_encounter,pegawai.no_ktp as ktppraktisi,pemeriksaan_ralan.tgl_perawatan,"+
                                   "pemeriksaan_ralan.jam_rawat,pemeriksaan_ralan.gcs,ifnull(satu_sehat_observationttvgcs.id_observation,'') as satu_sehat_observationttvgcs "+
                                   "from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis inner join tagihan_sadewa on tagihan_sadewa.no_nota=reg_periksa.no_rawat "+
                                   "inner join satu_sehat_encounter on satu_sehat_encounter.no_rawat=reg_periksa.no_rawat inner join pemeriksaan_ralan on pemeriksaan_ralan.no_rawat=reg_periksa.no_rawat "+
                                   "inner join pegawai on pemeriksaan_ralan.nip=pegawai.nik left join satu_sehat_observationttvgcs on satu_sehat_observationttvgcs.no_rawat=pemeriksaan_ralan.no_rawat "+
                                   "and satu_sehat_observationttvgcs.tgl_perawatan=pemeriksaan_ralan.tgl_perawatan and satu_sehat_observationttvgcs.jam_rawat=pemeriksaan_ralan.jam_rawat "+
                                   "and satu_sehat_observationttvgcs.status='Ralan' where pemeriksaan_ralan.gcs<>'' and reg_periksa.tgl_registrasi between ? and ? "+
                                   "order by reg_periksa.tgl_registrasi,reg_periksa.jam_reg,reg_periksa.no_rawat,pemeriksaan_ralan.tgl_perawatan,pemeriksaan_ralan.jam_rawat");
                            try {
                                ps.setString(1,Tanggal1.getText());
                                ps.setString(2,Tanggal2.getText());
                                rs=ps.executeQuery();
                                while(rs.next()){
                                    if((!rs.getString("no_ktp").equals(""))&&(!rs.getString("ktppraktisi").equals(""))&&rs.getString("satu_sehat_observationttvgcs").equals("")){
                                        try {
                                            iddokter=cekViaSatuSehat.tampilIDParktisi(rs.getString("ktppraktisi"));
                                            idpasien=cekViaSatuSehat.tampilIDPasien(rs.getString("no_ktp"));
                                            try{
                                                headers = new HttpHeaders();
                                                headers.setContentType(MediaType.APPLICATION_JSON);
                                                headers.add("Authorization", "Bearer "+api.TokenSatuSehat());
                                                json = "{" +
                                                            "\"resourceType\": \"Observation\"," +
                                                            "\"status\": \"final\"," +
                                                            "\"category\": [" +
                                                                "{" +
                                                                    "\"coding\": [" +
                                                                        "{" +
                                                                            "\"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\"," +
                                                                            "\"code\": \"vital-signs\"," +
                                                                            "\"display\": \"Vital Signs\"" +
                                                                        "}" +
                                                                    "]" +
                                                                "}" +
                                                            "]," +
                                                            "\"code\": {" +
                                                                "\"coding\": [" +
                                                                    "{" +
                                                                        "\"system\": \"http://loinc.org\"," +
                                                                        "\"code\": \"9269-2\"," +
                                                                        "\"display\": \"Glasgow coma score total\"" +
                                                                    "}" +
                                                                "]" +
                                                            "}," +
                                                            "\"subject\": {" +
                                                                "\"reference\": \"Patient/"+idpasien+"\"" +
                                                            "}," +
                                                            "\"performer\": [" +
                                                                "{" +
                                                                    "\"reference\": \"Practitioner/"+iddokter+"\"" +
                                                                "}" +
                                                            "]," +
                                                            "\"encounter\": {" +
                                                                "\"reference\": \"Encounter/"+rs.getString("id_encounter")+"\"," +
                                                                "\"display\": \"Pemeriksaan Fisik GCS di Rawat Jalan/IGD, Pasien "+rs.getString("nm_pasien")+" Pada Tanggal "+rs.getString("tgl_perawatan")+" Jam "+rs.getString("jam_rawat")+"\"" +
                                                            "}," +
                                                            "\"effectiveDateTime\": \""+rs.getString("tgl_perawatan")+"T"+rs.getString("jam_rawat")+"+07:00\"," +
                                                            "\"valueQuantity\": {" +
                                                                "\"value\": "+rs.getString("gcs")+"," +
                                                                "\"system\": \"http://unitsofmeasure.org\"," +
                                                                "\"code\": \"{score}\"" +
                                                            "}" +
                                                       "}";
                                                System.out.println("URL : "+link+"/Observation");
                                                System.out.println("Request JSON : "+json);
                                                requestEntity = new HttpEntity(json,headers);
                                                json=api.getRest().exchange(link+"/Observation", HttpMethod.POST, requestEntity, String.class).getBody();
                                                System.out.println("Result JSON : "+json);
                                                root = mapper.readTree(json);
                                                response = root.path("id");
                                                if(!response.asText().equals("")){
                                                    Sequel.menyimpan("satu_sehat_observationttvgcs","?,?,?,?,?","Observation GCS",5,new String[]{
                                                        rs.getString("no_rawat"),rs.getString("tgl_perawatan"),rs.getString("jam_rawat"),"Ralan",response.asText()
                                                    });
                                                }
                                            }catch(Exception es){
                                                System.out.println("Notifikasi Bridging : "+es);
                                            }
                                        } catch (Exception ea) {
                                            System.out.println("Notifikasi : "+ea);
                                        }
                                    }
                                }
                            } catch (Exception ez) {
                                System.out.println("Notif : "+ez);
                            } finally{
                                if(rs!=null){
                                    rs.close();
                                }
                                if(ps!=null){
                                    ps.close();
                                }
                            }

                            ps=koneksi.prepareStatement(
                                   "select reg_periksa.no_rawat,pasien.nm_pasien,pasien.no_ktp,satu_sehat_encounter.id_encounter,pegawai.no_ktp as ktppraktisi,pemeriksaan_ranap.tgl_perawatan,"+
                                   "pemeriksaan_ranap.jam_rawat,pemeriksaan_ranap.gcs,ifnull(satu_sehat_observationttvgcs.id_observation,'') as satu_sehat_observationttvgcs "+
                                   "from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis inner join tagihan_sadewa on tagihan_sadewa.no_nota=reg_periksa.no_rawat "+
                                   "inner join satu_sehat_encounter on satu_sehat_encounter.no_rawat=reg_periksa.no_rawat inner join pemeriksaan_ranap on pemeriksaan_ranap.no_rawat=reg_periksa.no_rawat "+
                                   "inner join pegawai on pemeriksaan_ranap.nip=pegawai.nik left join satu_sehat_observationttvgcs on satu_sehat_observationttvgcs.no_rawat=pemeriksaan_ranap.no_rawat "+
                                   "and satu_sehat_observationttvgcs.tgl_perawatan=pemeriksaan_ranap.tgl_perawatan and satu_sehat_observationttvgcs.jam_rawat=pemeriksaan_ranap.jam_rawat "+
                                   "and satu_sehat_observationttvgcs.status='Ranap' where pemeriksaan_ranap.gcs<>'' and reg_periksa.tgl_registrasi between ? and ? "+
                                   "order by reg_periksa.tgl_registrasi,reg_periksa.jam_reg,reg_periksa.no_rawat,pemeriksaan_ranap.tgl_perawatan,pemeriksaan_ranap.jam_rawat");
                            try {
                                ps.setString(1,Tanggal1.getText());
                                ps.setString(2,Tanggal2.getText());
                                rs=ps.executeQuery();
                                while(rs.next()){
                                    if((!rs.getString("no_ktp").equals(""))&&(!rs.getString("ktppraktisi").equals(""))&&rs.getString("satu_sehat_observationttvgcs").equals("")){
                                        try {
                                            iddokter=cekViaSatuSehat.tampilIDParktisi(rs.getString("ktppraktisi"));
                                            idpasien=cekViaSatuSehat.tampilIDPasien(rs.getString("no_ktp"));
                                            try{
                                                headers = new HttpHeaders();
                                                headers.setContentType(MediaType.APPLICATION_JSON);
                                                headers.add("Authorization", "Bearer "+api.TokenSatuSehat());
                                                json = "{" +
                                                            "\"resourceType\": \"Observation\"," +
                                                            "\"status\": \"final\"," +
                                                            "\"category\": [" +
                                                                "{" +
                                                                    "\"coding\": [" +
                                                                        "{" +
                                                                            "\"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\"," +
                                                                            "\"code\": \"vital-signs\"," +
                                                                            "\"display\": \"Vital Signs\"" +
                                                                        "}" +
                                                                    "]" +
                                                                "}" +
                                                            "]," +
                                                            "\"code\": {" +
                                                                "\"coding\": [" +
                                                                    "{" +
                                                                        "\"system\": \"http://loinc.org\"," +
                                                                        "\"code\": \"9269-2\"," +
                                                                        "\"display\": \"Glasgow coma score total\"" +
                                                                    "}" +
                                                                "]" +
                                                            "}," +
                                                            "\"subject\": {" +
                                                                "\"reference\": \"Patient/"+idpasien+"\"" +
                                                            "}," +
                                                            "\"performer\": [" +
                                                                "{" +
                                                                    "\"reference\": \"Practitioner/"+iddokter+"\"" +
                                                                "}" +
                                                            "]," +
                                                            "\"encounter\": {" +
                                                                "\"reference\": \"Encounter/"+rs.getString("id_encounter")+"\"," +
                                                                "\"display\": \"Pemeriksaan Fisik GCS di Rawat Inap, Pasien "+rs.getString("nm_pasien")+" Pada Tanggal "+rs.getString("tgl_perawatan")+" Jam "+rs.getString("jam_rawat")+"\"" +
                                                            "}," +
                                                            "\"effectiveDateTime\": \""+rs.getString("tgl_perawatan")+"T"+rs.getString("jam_rawat")+"+07:00\"," +
                                                            "\"valueQuantity\": {" +
                                                                "\"value\": "+rs.getString("gcs")+"," +
                                                                "\"system\": \"http://unitsofmeasure.org\"," +
                                                                "\"code\": \"{score}\"" +
                                                            "}" +
                                                       "}";
                                                System.out.println("URL : "+link+"/Observation");
                                                System.out.println("Request JSON : "+json);
                                                requestEntity = new HttpEntity(json,headers);
                                                json=api.getRest().exchange(link+"/Observation", HttpMethod.POST, requestEntity, String.class).getBody();
                                                System.out.println("Result JSON : "+json);
                                                root = mapper.readTree(json);
                                                response = root.path("id");
                                                if(!response.asText().equals("")){
                                                    Sequel.menyimpan("satu_sehat_observationttvgcs","?,?,?,?,?","Observation GCS",5,new String[]{
                                                        rs.getString("no_rawat"),rs.getString("tgl_perawatan"),rs.getString("jam_rawat"),"Ranap",response.asText()
                                                    });
                                                }
                                            }catch(Exception es){
                                                System.out.println("Notifikasi Bridging : "+es);
                                            }
                                        } catch (Exception ea) {
                                            System.out.println("Notifikasi : "+ea);
                                        }
                                    }
                                }
                            } catch (Exception ez) {
                                System.out.println("Notif : "+ez);
                            } finally{
                                if(rs!=null){
                                    rs.close();
                                }
                                if(ps!=null){
                                    ps.close();
                                }
                            }
                        }catch(Exception ex){
                            System.out.println("Notifikasi : "+ex);
                        }
                        
                        //kirim TTV Kesadaran
                    }
                }
            }
        };
        // Timer
        new Timer(1000, taskPerformer).start();
    }
}
